name: Build PyInstaller Binaries


on:
  workflow_call:
    inputs:
      pack:
        type: boolean
        default: false
        description: "Use UPX"
      args:
        type: string
        description: "Arguments to be passed to pyinstaller"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, windows-latest ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if exactly one .spec file exists
        id: check-spec
        shell: bash
        run: |
          spec_file=$(find . -name "*.spec")
          count=$(echo "$spec_file" | wc -l)
          
          if [ "$count" -eq 1 ]; then
            echo "Exactly one .spec file found."
            echo "::set-output name=spec_file::$spec_file"
          else
            echo "Expected exactly one .spec file, but found $count."
            exit 1
          fi

      - name: Install UPX
        uses: crazy-max/ghaction-upx@v3
        if: ${{ inputs.pack }}
        with:
          install-only: true

      - name: Build with PyInstaller
        uses: sayyid5416/pyinstaller@v1
        with:
          spec: ${{ steps.check-spec.outputs.spec_file }}
          requirements: ./requirements.txt
          options: ${{ inputs.args }}
          python_arch: x64
          exe_path: ./dist
          upload_exe_with_name: ${{ matrix.os }}

  # === Release Job ===
  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write

    steps:
      - name: Download wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: false

      - name: Compress contents
        run: |
          for dir in ./dist/*/; do
          folder_name=$(basename "$dir")
          zip_file="${folder_name}-${{ github.ref }}.zip"
          zip -r "$zip_file" "${dir}main/"
          done

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./*.zip
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
